<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_05) on Fri May 24 01:58:34 PDT 2013 -->
<title>Board</title>
<meta name="date" content="2013-05-24">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Board";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../model/package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Board.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../model/Block.html" title="enum in model"><span class="strong">Prev Class</span></a></li>
<li><a href="../model/IPiece.html" title="class in model"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?model/Board.html" target="_top">Frames</a></li>
<li><a href="Board.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">model</div>
<h2 title="Class Board" class="title">Class Board</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>java.util.Observable</li>
<li>
<ul class="inheritance">
<li>model.Board</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public final class <span class="strong">Board</span>
extends java.util.Observable</pre>
<div class="block">A representation of a Tetris game board.</div>
<dl><dt><span class="strong">Version:</span></dt>
  <dd>Spring 2013</dd>
<dt><span class="strong">Author:</span></dt>
  <dd>Alan Fowler</dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../model/Board.html#Board()">Board</a></strong>()</code>
<div class="block">Constructs a Board using default dimensions (10x20) and random pieces.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../model/Board.html#Board(int, int, java.util.List)">Board</a></strong>(int&nbsp;the_width,
     int&nbsp;the_height,
     java.util.List&lt;<a href="../model/MutablePiece.html" title="interface in model">MutablePiece</a>&gt;&nbsp;the_pieces)</code>
<div class="block">Constructs a Board using the specified dimensions.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../model/Board.html#gameIsOver()">gameIsOver</a></strong>()</code>
<div class="block">Returns whether the game is over or not.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../model/MutablePiece.html" title="interface in model">MutablePiece</a></code></td>
<td class="colLast"><code><strong><a href="../model/Board.html#getCurrentPiece()">getCurrentPiece</a></strong>()</code>
<div class="block">Returns the current Piece being moved.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.util.List&lt;<a href="../model/Block.html" title="enum in model">Block</a>[]&gt;</code></td>
<td class="colLast"><code><strong><a href="../model/Board.html#getFrozenBlocks()">getFrozenBlocks</a></strong>()</code>
<div class="block">Returns the current frozen blocks on the board.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../model/Board.html#getHeight()">getHeight</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../model/MutablePiece.html" title="interface in model">MutablePiece</a></code></td>
<td class="colLast"><code><strong><a href="../model/Board.html#getNextPiece()">getNextPiece</a></strong>()</code>
<div class="block">Returns the next piece to be used.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../model/Board.html#getWidth()">getWidth</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../model/Board.html#hardDrop()">hardDrop</a></strong>()</code>
<div class="block">Drops the current Piece all the way down.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../model/Board.html#moveDown()">moveDown</a></strong>()</code>
<div class="block">Attempts to move the current piece down.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../model/Board.html#moveLeft()">moveLeft</a></strong>()</code>
<div class="block">Attempts to move the current piece to the left.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../model/Board.html#moveRight()">moveRight</a></strong>()</code>
<div class="block">Attempts to move the current piece to the right.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../model/Board.html#newGame(int, int, java.util.List)">newGame</a></strong>(int&nbsp;the_width,
       int&nbsp;the_height,
       java.util.List&lt;<a href="../model/MutablePiece.html" title="interface in model">MutablePiece</a>&gt;&nbsp;the_pieces)</code>
<div class="block">Creates a new game on a Board of the specified width and height and loads
 the given set of pieces.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../model/Board.html#rotate()">rotate</a></strong>()</code>
<div class="block">Attempts to rotate the current piece clockwise.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../model/Board.html#step()">step</a></strong>()</code>
<div class="block">Updates the game by one step.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../model/Board.html#toString()">toString</a></strong>()</code>
<div class="block">Returns a string that represents the current state of the board.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.util.Observable">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.util.Observable</h3>
<code>addObserver, countObservers, deleteObserver, deleteObservers, hasChanged, notifyObservers, notifyObservers</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Board(int, int, java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Board</h4>
<pre>public&nbsp;Board(int&nbsp;the_width,
     int&nbsp;the_height,
     java.util.List&lt;<a href="../model/MutablePiece.html" title="interface in model">MutablePiece</a>&gt;&nbsp;the_pieces)</pre>
<div class="block">Constructs a Board using the specified dimensions.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>the_width</code> - the height to assign</dd><dd><code>the_height</code> - the width to assign</dd><dd><code>the_pieces</code> - the sequence of pieces to use; empty list indicates a
          random game</dd></dl>
</li>
</ul>
<a name="Board()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Board</h4>
<pre>public&nbsp;Board()</pre>
<div class="block">Constructs a Board using default dimensions (10x20) and random pieces.</div>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="newGame(int, int, java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>newGame</h4>
<pre>public&nbsp;void&nbsp;newGame(int&nbsp;the_width,
           int&nbsp;the_height,
           java.util.List&lt;<a href="../model/MutablePiece.html" title="interface in model">MutablePiece</a>&gt;&nbsp;the_pieces)</pre>
<div class="block">Creates a new game on a Board of the specified width and height and loads
 the given set of pieces.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>the_width</code> - The width of the board</dd><dd><code>the_height</code> - The height of the board</dd><dd><code>the_pieces</code> - The pieces to use</dd></dl>
</li>
</ul>
<a name="getWidth()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getWidth</h4>
<pre>public&nbsp;int&nbsp;getWidth()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>the width</dd></dl>
</li>
</ul>
<a name="getHeight()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getHeight</h4>
<pre>public&nbsp;int&nbsp;getHeight()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>the height</dd></dl>
</li>
</ul>
<a name="getFrozenBlocks()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getFrozenBlocks</h4>
<pre>public&nbsp;java.util.List&lt;<a href="../model/Block.html" title="enum in model">Block</a>[]&gt;&nbsp;getFrozenBlocks()</pre>
<div class="block">Returns the current frozen blocks on the board.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the current frozen blocks on the board.</dd></dl>
</li>
</ul>
<a name="getCurrentPiece()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCurrentPiece</h4>
<pre>public&nbsp;<a href="../model/MutablePiece.html" title="interface in model">MutablePiece</a>&nbsp;getCurrentPiece()</pre>
<div class="block">Returns the current Piece being moved.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the current Piece being moved.</dd></dl>
</li>
</ul>
<a name="moveLeft()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>moveLeft</h4>
<pre>public&nbsp;boolean&nbsp;moveLeft()</pre>
<div class="block">Attempts to move the current piece to the left.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>true if it is possible to move the current piece to the left; false
         otherwise</dd></dl>
</li>
</ul>
<a name="moveRight()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>moveRight</h4>
<pre>public&nbsp;boolean&nbsp;moveRight()</pre>
<div class="block">Attempts to move the current piece to the right.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>true if it is possible to move the current piece to the right;
         false otherwise</dd></dl>
</li>
</ul>
<a name="moveDown()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>moveDown</h4>
<pre>public&nbsp;boolean&nbsp;moveDown()</pre>
<div class="block">Attempts to move the current piece down.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>true if it is possible to move the current piece down; false
         otherwise</dd></dl>
</li>
</ul>
<a name="hardDrop()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hardDrop</h4>
<pre>public&nbsp;void&nbsp;hardDrop()</pre>
<div class="block">Drops the current Piece all the way down.</div>
</li>
</ul>
<a name="rotate()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rotate</h4>
<pre>public&nbsp;boolean&nbsp;rotate()</pre>
<div class="block">Attempts to rotate the current piece clockwise.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>true if it is possible to rotate the current piece; false otherwise</dd></dl>
</li>
</ul>
<a name="step()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>step</h4>
<pre>public&nbsp;void&nbsp;step()</pre>
<div class="block">Updates the game by one step.</div>
</li>
</ul>
<a name="getNextPiece()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNextPiece</h4>
<pre>public&nbsp;<a href="../model/MutablePiece.html" title="interface in model">MutablePiece</a>&nbsp;getNextPiece()</pre>
<div class="block">Returns the next piece to be used.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the next piece to be used.</dd></dl>
</li>
</ul>
<a name="gameIsOver()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>gameIsOver</h4>
<pre>public&nbsp;boolean&nbsp;gameIsOver()</pre>
<div class="block">Returns whether the game is over or not.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>Whether the game is over or not.</dd></dl>
</li>
</ul>
<a name="toString()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>toString</h4>
<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
<div class="block">Returns a string that represents the current state of the board.</div>
<dl>
<dt><strong>Overrides:</strong></dt>
<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
<dt><span class="strong">Returns:</span></dt><dd>The string representation of the board</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../model/package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Board.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../model/Block.html" title="enum in model"><span class="strong">Prev Class</span></a></li>
<li><a href="../model/IPiece.html" title="class in model"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?model/Board.html" target="_top">Frames</a></li>
<li><a href="Board.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
